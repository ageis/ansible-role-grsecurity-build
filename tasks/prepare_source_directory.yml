---
- name: Clean source directory prior to extraction.
  file:
    path: "{{ grsecurity_build_linux_source_directory }}"
    state: absent

- name: Extract Linux tarball (.tar -> directory).
  unarchive:
    copy: no
    src: "{{ grsecurity_build_download_directory }}/linux-{{ linux_kernel_version }}.tar"
    dest: "{{ grsecurity_build_download_directory }}/"


- name: Apply custom patches (e.g. for e1000e support)
  patch:
    remote_src: true
    src: "{{ grsecurity_build_download_directory }}/{{ item|basename }}"
    basedir: "{{ grsecurity_build_linux_source_directory }}"
    strip: 1
  with_items: "{{ grsecurity_build_custom_patches }}"

- name: Apply grsecurity patch.
  patch:
    remote_src: true
    src: "{{ grsecurity_build_download_directory }}/{{ grsecurity_patch_filename }}"
    basedir: "{{ grsecurity_build_linux_source_directory }}"
    strip: 1

- name: Clean kernel source tree.
  make:
    chdir: "{{ grsecurity_build_linux_source_directory }}"
    target: clean

# Bail out for interactive compilation. Override interactive mode
# by setting `grsecurity_build_strategy`
- name: Advise on next steps for manually compiling kernel.
  debug:
    msg: >
      Build environment ready. Kernel source is available in
      {{ grsecurity_build_linux_source_directory }} . Run `make menuconfig` in that
      directory to configure the build, then `{{ grsecurity_build_compile_command }}`
      or similar to begin compiling the kernel.
  when: grsecurity_build_strategy == "manual"
